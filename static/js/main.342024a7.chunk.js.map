{"version":3,"sources":["context/ThemeContext.js","hooks/useTheme.js","components/RecipeList.js","hooks/useFetch.js","pages/home/Home.js","pages/create/Create.js","pages/recipe/Recipe.js","pages/search/Search.js","components/Searchbar.js","components/Navbar.js","assets/brightness.svg","components/ThemeSelector.js","App.js","index.js"],"names":["ThemeContext","createContext","themeReducer","state","action","type","color","payload","mode","ThemeProvider","children","useReducer","dispach","Provider","value","changeColor","changeMode","useTheme","context","useContext","undefined","Error","RecipeList","recipes","length","className","map","recipe","title","src","img","alt","cookingTime","method","substring","to","id","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","options","setOptions","postData","headers","body","JSON","stringify","useEffect","controller","AbortController","fetchData","fetchOptions","a","fetch","signal","res","ok","statusText","json","name","console","log","abort","Home","Create","setTitle","setMethod","setImage","setCookingTime","newIngredient","setNewIngredient","ingredients","setIngredients","ingredientInput","useRef","history","useHistory","push","onSubmit","e","preventDefault","onChange","target","required","ref","onClick","ing","trim","includes","prevIngredients","current","focus","Recipe","useParams","Search","queryString","useLocation","search","queryParams","URLSearchParams","query","get","Searchbar","term","setTerm","htmlFor","Navbar","style","background","themeColors","ThemeSelector","modeIcon","filter","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.342024a7.chunk.js","sourcesContent":["import { createContext, useReducer } from 'react'\n\nexport const ThemeContext = createContext()\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE_COLOR': \n      return { ...state, color: action.payload }\n    case 'CHANGE_MODE': {\n      return { ...state, mode: action.payload }\n    }\n    default:\n      return state\n  }\n}\n\nexport function ThemeProvider({ children }) {\n  const [state, dispach] = useReducer(themeReducer, {\n    color: 'rgba(178, 126, 59, 0.700)',\n    mode: 'light'\n  })\n\n  const changeColor = (color) => {\n    dispach({ type: 'CHANGE_COLOR', payload: color })\n  }\n\n  const changeMode = (mode) => {\n    dispach({type: 'CHANGE_MODE', payload: mode})\n  }\n  \n  return (\n    <ThemeContext.Provider value={{ ...state, changeColor, changeMode }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}","import { useContext } from 'react'\nimport { ThemeContext } from '../context/ThemeContext'\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext) //{color: 'blue'} in our case  \n\n  if (context === undefined) {\n    throw new Error(\"useTheme() is used outside a ThemeProvider\")\n  }\n\n  return context\n}","import './RecipeList.css'\nimport { Link } from 'react-router-dom'\nimport { useTheme } from '../hooks/useTheme'\n\nexport default function RecipeList({ recipes }) {\n  const { mode } = useTheme()\n\n  if (recipes.length === 0) {\n    return <div className=\"error\">No recipes found</div>\n  }\n\n  return (\n    <div className=\"recipe-list\">\n        {recipes.map(recipe => (\n          <div key={recipe.id} className={`card ${mode}`}>\n            <>\n              <h3>{recipe.title}</h3>\n              <img \n                src={recipe.img}\n                className=\"icon\"\n                alt=\"dish\"\n              />\n            </>\n            <p>{recipe.cookingTime} to make.</p>\n            <div>{recipe.method.substring(0, 100)}...</div>\n            <Link to={`/recipes/${recipe.id}`}>Select</Link>\n          </div> \n        ))}\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\"\n\nexport const useFetch = (url, method = \"GET\") => {\n  const [data, setData] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const [error, setError] = useState(null)\n  const [options, setOptions] = useState(null)\n\n  const postData = (postData) => {\n    setOptions ({\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(postData)\n    })\n  }\n\n  useEffect(() => {\n    const controller = new AbortController()\n\n    const fetchData = async (fetchOptions) => {\n      setIsPending(true)\n      \n      try {\n        const res = await fetch(url, { ...fetchOptions, signal: controller.signal })\n        if(!res.ok) {\n          throw new Error(res.statusText)\n        }\n        const data = await res.json()\n\n        setIsPending(false)\n        setData(data)\n        setError(null)\n      } catch (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"the fetch was aborted\")\n        } else {\n          setIsPending(false)\n          setError('Could not fetch the data')\n        }\n      }\n    }\n\n    if (method === \"GET\") {\n      fetchData()\n    }\n    if (method === \"POST\" && options) {\n      fetchData(options)\n    }\n\n    return () => {\n      controller.abort()\n    }\n\n  }, [url, options, method])\n\n  return { data, isPending, error, postData }\n}","import React from 'react'\nimport RecipeList from '../../components/RecipeList'\nimport { useFetch } from '../../hooks/useFetch'\nimport './Home.css'\n\nexport default function Home() {\n  const { data, isPending, error } = useFetch('http://localhost:3000/recipes')\n  \n  return (\n    <div className=\"home\">\n      {error && <p className=\"error\">{ error }</p>}\n      {isPending && <p className=\"loading\"> Loading... </p>}\n      {data && <RecipeList recipes={data} />}\n    </div>\n  )\n}\n","import React from 'react'\nimport { useState, useRef, useEffect } from 'react'\nimport { useFetch } from '../../hooks/useFetch'\nimport { useHistory } from 'react-router-dom'\n\nimport './Create.css'\nimport { useTheme } from '../../hooks/useTheme'\n\nexport default function Create() {\n  const [title, setTitle] = useState('')\n  const [method, setMethod] = useState('')\n  const [img, setImage] = useState('')\n  const [cookingTime, setCookingTime] = useState('')\n  const [newIngredient, setNewIngredient] = useState('')\n  const [ingredients, setIngredients] = useState([])\n  const ingredientInput = useRef(null)\n  const history = useHistory( )\n  const { mode } = useTheme()\n\n  const { postData, data, error } = useFetch('https://fake-server-app-mmolnar.herokuapp.com/recipes', 'POST')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    postData({ title, ingredients, method, img, cookingTime: cookingTime + ' minutes'})\n  }\n\n  const handleAdd = (e) => {\n    e.preventDefault()\n    const ing = newIngredient.trim()\n\n    if (ing && !ingredients.includes(ing)) {\n      setIngredients(prevIngredients => [...prevIngredients, ing])\n    }\n    setNewIngredient('')\n    ingredientInput.current.focus()\n  } \n\n  //redirect user\n  useEffect(() => {\n    if (data && !error) {\n      history.push('/')\n    }\n  }, [data, history, error])\n\n  return (\n    <div className={`create ${mode}`}>\n      <h2 className=\"page\">Add a new Recipe</h2>\n      \n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>Recipe title:</span>\n          <input \n            type=\"text\" \n            onChange={(e) => setTitle(e.target.value)} \n            value={title} \n            required\n          />\n        </label>\n\n        <label>\n          <span>Recipe ingredients</span>\n            <div className=\"ingredients\">\n              <input type=\"text\"\n                onChange={(e) => setNewIngredient(e.target.value)}\n                value={newIngredient}\n                ref={ingredientInput}\n              />\n              <button onClick={handleAdd} \n                className=\"btn\">\n                  add\n              </button> \n            </div>\n        </label>\n        <p>Current ingredients: {ingredients.map(ing => <em key={ing}>{ing}, </em>)}</p>\n\n        <label>\n          <span>Recipe method:</span>\n          <textarea \n            onChange={(e) => setMethod(e.target.value)}\n            value={method}\n            required\n          />\n        </label>\n\n        <label>\n          <span>Image:</span>\n          <textarea \n            onChange={(e) => setImage(e.target.value)}\n            value={img}\n            required\n          />\n        </label>\n\n        <label>\n          <span>Cooking time (minutes)</span>\n          <input \n            type=\"number\"\n            onChange={(e) => setCookingTime(e.target.value)}\n            required\n          />\n        </label>\n\n        <button className=\"btn\" id=\"submit\"> Submit </button>\n      </form>\n      {error && <p className=\"error\">{ error }</p>}\n    </div>\n  )\n}\n","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useFetch } from '../../hooks/useFetch';\nimport { useTheme } from '../../hooks/useTheme';\nimport './Recipe.css'\n\nexport default function Recipe() {\n  const { id } = useParams();\n  const url = 'https://fake-server-app-mmolnar.herokuapp.com/recipes/' + id\n  const { data: recipe, isPending, error } = useFetch(url)\n  const { mode } = useTheme()\n\n  return (\n    <div className={`recipe ${mode}`}>\n      {error && <p className=\"error\">{error}</p>}\n      {isPending && <p className=\"loading\">Loading...</p>}\n      {recipe && \n        <>\n          <img\n            src={recipe.img}\n            alt=\"dish\"\n            className=\"foto\"\n          >\n          </img>\n          <h2 className=\"page-title\">{recipe.title}</h2>\n          <p>Takes {recipe.cookingTime} to cook</p>\n          <ul>\n            {recipe.ingredients.map(ing => (\n              <li key={ing}>{ing}</li>\n            ))}\n          </ul>\n          <p className=\"method\">{recipe.method}</p>\n        </>}\n    </div>\n  )\n}\n","import { useLocation } from 'react-router-dom'\nimport RecipeList from '../../components/RecipeList'\nimport { useFetch } from '../../hooks/useFetch'\n\nimport './Search.css'\n\nexport default function Search() {\n  const queryString = useLocation().search\n  const queryParams = new URLSearchParams(queryString)\n  console.log(queryParams)\n  const query = queryParams.get('query')\n\n  const url = 'https://fake-server-app-mmolnar.herokuapp.com/recipes?q=' + query\n  const {error, isPending, data} = useFetch(url)\n\n  return (\n    <div>\n      <h2 className=\"page-title\">Recipies including \"{query}\"</h2>\n      {error && <p className=\"error\">{error}</p>}\n      {isPending && <p className=\"loading\">Loading</p>}\n      {data && <RecipeList recipes={data}/>}\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport './Searchbar.css'\nimport { useHistory } from 'react-router-dom'\n\nexport default function Searchbar() {\n  const [term, setTerm] = useState('')\n  const history = useHistory()\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    history.push(`/search?query=${term}`)\n  }\n\n  return (\n    <div className=\"searchbar\">\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"search\">Search:</label>\n        <input \n          type=\"text\"\n          id=\"search\"\n          onChange={(e) => setTerm(e.target.value)}\n          required\n        />\n      </form>\n    </div>\n  )\n}\n","import './Navbar.css'\n\nimport { Link } from 'react-router-dom'\nimport { useTheme } from '../hooks/useTheme'\nimport Searchbar from './Searchbar'\n\nexport default function Navbar() {\n  const { color, changeColor } = useTheme()\n\n  return (\n    <div className=\"navbar\" style={{ background: color }}>\n      <nav onClick={() => changeColor('rgba(140, 184, 94, 0.506)')}>\n        <Link to=\"/\" className=\"brand\">\n          <h1>Coocker</h1>\n        </Link>\n        <Searchbar />\n        <Link to=\"/create\"> Create Recipe </Link>\n      </nav>\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/brightness.18c28fe1.svg\";","import './ThemeSelector.css'\nimport { useTheme } from '../hooks/useTheme'\nimport modeIcon from '../assets/brightness.svg'\n\nconst themeColors = ['rgba(140, 184, 94, 0.506)', 'rgba(178, 126, 59, 0.700)', 'rgba(35, 63, 5, 0.506)']\n\nexport default function ThemeSelector() {\n  const { changeColor, changeMode, mode } = useTheme()\n\n  const toggleMode = () => {\n    changeMode(mode === 'dark' ? 'light' : 'dark')\n  }\n  console.log(mode)\n\n  return (\n    <div className=\"theme-selector\">\n      <div className=\"mode-toggle\">\n        <img\n        onClick={toggleMode} \n          src={modeIcon} \n          alt=\"dark/light toggle icon\"\n          style={{ filter : mode === 'dark' ? 'invert(100%)' : 'invert(20%)'}} \n        />\n      </div>\n      <div className=\"theme-buttons\">\n        {themeColors.map(color =>   (\n          <div \n            key={color}\n            onClick={() => changeColor(color)} \n            style={{ background: color }}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n","import './App.css'\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/home/Home'\nimport Create from './pages/create/Create'\nimport Recipe from './pages/recipe/Recipe'\nimport Search from './pages/search/Search'\nimport Navbar from './components/Navbar'\nimport ThemeSelector from './components/ThemeSelector'\nimport { useTheme } from './hooks/useTheme'\n\nfunction App() {\n  const { mode } = useTheme()\n\n  return (\n    <div className={`App ${mode}`}>\n      <BrowserRouter>\n        <Navbar />\n        <ThemeSelector />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/create\">\n            <Create />\n          </Route>\n          <Route exact path=\"/search\">\n            <Search />\n          </Route>\n          <Route exact path=\"/recipes/:id\">\n            <Recipe />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n      <div className=\"footer\"></div>\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './context/ThemeContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}